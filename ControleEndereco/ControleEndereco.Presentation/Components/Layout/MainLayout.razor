@inherits LayoutComponentBase
@using MudBlazor

<MudThemeProvider @bind-IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider FullWidth="true"
                   CloseButton="false"
                   BackdropClick="false"
                   NoHeader="false"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudImage Class="ml-3" Src="images/logo.png" Alt="Logo Empresa" Width="100"></MudImage>
        <MudSpacer />
        <MudMenu Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" OffsetY="true" OffsetX="true"
                 AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopRight">
            <MudMenuItem OnClick="@(async () => await ToggleTheme())">
                <MudSwitch Class="ml-2" @bind-Value="_isDarkMode" ThumbIcon="@Icons.Material.Filled.Brightness4" Color="Color.Primary">Tema Escuro</MudSwitch>
            </MudMenuItem>
            <MudDivider />
            <MudMenuItem Href="/contato" Style="text-decoration: none; color: inherit;">
                <MudIcon Icon="@Icons.Material.Filled.ContactMail" />
                <MudText Class="d-inline ml-2">Contato</MudText>
            </MudMenuItem>
            <MudMenuItem OnClick="@(() => Exit())">
                <MudIcon Icon="@Icons.Material.Filled.ExitToApp" />
                <MudText Class="d-inline ml-2">Sair</MudText>
            </MudMenuItem>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    bool _isDarkMode = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private Task ToggleTheme()
    {
        _isDarkMode = !_isDarkMode;
        return Task.CompletedTask;
    }

    private void Exit()
    {
        Environment.Exit(0);
    }
}
